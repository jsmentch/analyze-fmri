# Generated by: Neurodocker version 0.7.0+0.gdc97516.dirty
# Latest release: Neurodocker version 0.7.0
# Timestamp: 2020/06/02 20:21:48 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/ReproNim/neurodocker

Bootstrap: docker
From: centos:7

%post
su - root

export ND_ENTRYPOINT="/neurodocker/startup.sh"
yum install -y -q \
    bzip2 \
    ca-certificates \
    curl \
    localedef \
    unzip
yum clean packages
rm -rf /var/cache/yum/*
localedef -i en_US -f UTF-8 en_US.UTF-8
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
chmod -R 777 /neurodocker && chmod a+s /neurodocker

test "$(getent passwd neuro)" || useradd --no-user-group --create-home --shell /bin/bash neuro
su - neuro

export PATH="/opt/miniconda-latest/bin:$PATH"
echo "Downloading Miniconda installer ..."
conda_installer="/tmp/miniconda.sh"
curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash "$conda_installer" -b -p /opt/miniconda-latest
rm -f "$conda_installer"
conda update -yq -nbase conda
conda config --system --prepend channels conda-forge
conda config --system --set auto_update_conda false
conda config --system --set show_channel_urls true
sync && conda clean -y --all && sync
bash -c "source activate base
  pip install --no-cache-dir  \
      "pliers," \
      "clarifai," \
      "duecredit," \
      "face_recognition," \
      "python-twitter," \
      "gensim," \
      "google-api-python-client," \
      "google-compute-engine," \
      "librosa>=0.6.3," \
      "matplotlib," \
      "opencv-python," \
      "pathos," \
      "pygraphviz," \
      "pysrt," \
      "pytesseract," \
      "python-twitter," \
      "scikit-learn," \
      "seaborn," \
      "soundfile," \
      "spacy," \
      "SpeechRecognition>=3.6.0," \
      "tensorflow>=1.0.0," \
      "torch," \
      "transformers," \
      "xlrd" \
      ",rev_ai""
rm -rf ~/.cache/pip/*
sync


su - root

yum install -y None \
    emacs \
    vim
yum clean packages
rm -rf /var/cache/yum/*

echo '{
\n  "pkg_manager": "yum",
\n  "instructions": [
\n    [
\n      "base",
\n      "centos:7"
\n    ],
\n    [
\n      "user",
\n      "root"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "user",
\n      "neuro"
\n    ],
\n    [
\n      "miniconda",
\n      {
\n        "use_env": "base",
\n        "pip_install": [
\n          "pliers,",
\n          "clarifai,",
\n          "duecredit,",
\n          "face_recognition,",
\n          "python-twitter,",
\n          "gensim,",
\n          "google-api-python-client,",
\n          "google-compute-engine,",
\n          "librosa>=0.6.3,",
\n          "matplotlib,",
\n          "opencv-python,",
\n          "pathos,",
\n          "pygraphviz,",
\n          "pysrt,",
\n          "pytesseract,",
\n          "python-twitter,",
\n          "scikit-learn,",
\n          "seaborn,",
\n          "soundfile,",
\n          "spacy,",
\n          "SpeechRecognition>=3.6.0,",
\n          "tensorflow>=1.0.0,",
\n          "torch,",
\n          "transformers,",
\n          "xlrd",
\n          ",rev_ai"
\n        ]
\n      }
\n    ],
\n    [
\n      "user",
\n      "root"
\n    ],
\n    [
\n      "install",
\n      [
\n        "emacs",
\n        "vim"
\n      ]
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export CONDA_DIR="/opt/miniconda-latest"
export PATH="/opt/miniconda-latest/bin:$PATH"

%runscript
/neurodocker/startup.sh "$@"
